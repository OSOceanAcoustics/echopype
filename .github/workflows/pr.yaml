name: Test PR

on:
  pull_request:
    paths-ignore: ["**/docker.yaml", "docs"]

env:
  NUM_WORKERS: 2
  USE_POOCH: "True"
  ECHOPYPE_DATA_VERSION: v0.11.0
  ECHOPYPE_DATA_BASEURL: https://github.com/OSOceanAcoustics/echopype/releases/download/{version}/
  XDG_CACHE_HOME: ${{ github.workspace }}/.cache

jobs:
  test:
    name: ${{ matrix.python-version }}--${{ matrix.runs-on }}
    runs-on: ${{ matrix.runs-on }}
    if: ${{ !contains(github.event.pull_request.title, '[skip ci]') }}
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11", "3.12", "3.13"]
        runs-on: [ubuntu-latest]
        experimental: [false]

    services:
      # TODO: figure out how to update tag when there's a new one
      minio:
        image: cormorack/minioci:latest
        ports:
          - 9000:9000
      httpserver:
        image: cormorack/http:latest
        ports:
          - 8080:80

    steps:
      - name: Checkout repo
        uses: actions/checkout@v5
        with:
          fetch-depth: 0 # Fetch all history for all branches and tags.

      - name: Set up Python
        uses: actions/setup-python@v6.0.0
        with:
          python-version: ${{ matrix.python-version }}

      - name: Upgrade pip
        run: python -m pip install --upgrade pip

      - name: Set environment variables
        run: echo "PYTHON_VERSION=${{ matrix.python-version }}" >> $GITHUB_ENV

      - name: Remove docker-compose python
        run: sed -i "/docker-compose/d" requirements-dev.txt

      - name: Install dev tools
        run: python -m pip install -r requirements-dev.txt

      - name: Cache echopype test data
        uses: actions/cache@v4
        with:
          path: ${{ env.XDG_CACHE_HOME }}/echopype
          key: ep-data-${{ env.ECHOPYPE_DATA_VERSION }}

      - name: Ensure pooch (for GitHub assets)
        run: python -m pip install "pooch>=1.8"

      - name: Install error reporter
        if: ${{ matrix.python-version == '3.13' }}
        run: python -m pip install pytest-github-actions-annotate-failures

      - name: Install echopype
        run: python -m pip install -e ".[plot]"

      - name: Print installed packages
        run: python -m pip list

      - name: Finding changed files
        id: files
        uses: Ana06/get-changed-files@v2.3.0
        with:
          format: 'csv'

      - name: Print Changed files
        if: ${{ github.event_name == 'pull_request' }}
        run: echo "${{ steps.files.outputs.added_modified_renamed }}"

      - name: Pre-fetch Pooch test data
        run: |
          pytest --collect-only -q

      - name: Copy test data to MinIO and HTTP server
        run: |
          python .ci_helpers/docker/setup-services.py --deploy --data-only --http-server ${{ job.services.httpserver.id }}

      - name: Running all Tests
        run: |
          pytest -vvv -rx --numprocesses=${{ env.NUM_WORKERS }} --max-worker-restart=3 \
          --cov=echopype --cov-report=xml --log-cli-level=WARNING --disable-warnings

      - name: Upload code coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          file: ./coverage.xml
          flags: unittests
          env_vars: RUNNER_OS,PYTHON_VERSION
          name: codecov-umbrella
          fail_ci_if_error: false
