Contributing to echopype
========================


Contributing on GitHub
----------------------

- `Creating issues on GitHub <https://medium.com/nyc-planning-digital/writing-a-proper-github-issue-97427d62a20f>`_ 
- `Pull requests <https://jarednielsen.com/learn-git-fork-pull-request/>`_
- **TODO:** Add reccommendation and link (to the workflow type) to create fork and submit PR via fork


Installation for echopype development
-------------------------------------

First, clone the echopype repository. For example, to clone the main repository 
into a directory called echopype and set up this repository as the "upstream" remote:

.. code-block:: bash

    git clone -o upstream https://github.com/OSOceanAcoustics/echopype.git

Then, create a conda environment for developing or contributing to echopype 
(replace the Python version with your preferred version):

.. code-block:: bash

    cd echopype
    conda install -c conda-forge -n echopype --yes python=3.8 --file requirements.txt --file requirements-dev.txt
    conda activate echopype
    # ipykernel is recommended, to use JupyterLab and IPython to aid with development
    conda install -c conda-forge ipykernel
    pip install -e .


Ddocumentation development
--------------------------

Echopype documentation (`<https://echopype.readthedocs.io>`_) is based on 
`Sphinx <https://www.sphinx-doc.org>`_ and is hosted at 
`Read the Docs <https://readthedocs.org>`_. The sphinx files are found
in the ``docs`` directory, and the source documentation files, written in 
`reStructuredText <https://www.sphinx-doc.org/en/master/usage/restructuredtext/index.html>`_
(``.rst``) format, are in the ``docs/source`` directory. The echopype development
conda environment created above will install all required sphinx dependencies.
To run sphinx locally:

.. code-block:: bash

    cd docs
    sphinx-build -b html -d _build/doctrees source _build/html

To view the generated HTML files generated by Sphinx, open the 
``docs/_build/html/index.html`` in your browser.


Test data files
---------------

.. note::

    Echopype previously used Git LFS for managing and accessing large test data files.
    large test files needed for testing.  These files are only needed if you plan to 
    work on the code and run the tests locally.
    **TODO:** Brief write up of what we do now.

- Data is deployed locally from an image on docker hub (https://hub.docker.com/r/cormorack/http). See https://github.com/OSOceanAcoustics/echopype/blob/master/.ci_helpers/docker/, specially https://github.com/OSOceanAcoustics/echopype/blob/master/.ci_helpers/docker/docker-compose.yaml)
- docker and docker-compose need to be installed first, if not already installed
- The test data files are managed in a private Google Drive folder. The ``cormorack/http`` docker image pulls from that Google Drive folder regularly. But some of the test data are currently also found in https://github.com/OSOceanAcoustics/echopype/tree/master/echopype/test_data


Running the tests
-----------------

**VARIOUS NOTES ABOUT NEW SETUP**

In a section about contributing to development, mention that the GH Actions CI (ci.yaml) can be skipped by including the string "[skip ci]" in the commit message. See ci.yaml#L22. If the push or PR has multiple commits, does the string have to be in the most recent (header?) commit?


Running the tests

.. code-block:: bash

    python .ci_helpers/docker/setup-services.py --deploy
    python .ci_helpers/run-test.py --local --pytest-args="-vv"

    # When done testing, "tear down" the docker containers
    python .ci_helpers/docker/setup-services.py --tear-down


For reference: https://github.com/OSOceanAcoustics/echopype/blob/master/.ci_helpers/docker/setup-services.py and https://github.com/OSOceanAcoustics/echopype/blob/master/.ci_helpers/run-test.py

The tests include reading and writing from locally setup (via docker) http and S3 sources, the latter via minio.


Continuous integration GitHub Actions
-------------------------------------

**TODO:** Describe briefly the CI actions currently setup at https://github.com/OSOceanAcoustics/echopype/tree/master/.github/workflows
