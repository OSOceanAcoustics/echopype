import pytest

import numpy as np
import xarray as xr

import echopype as ep


def get_mock_freq_diff_data(n):
    """

    n = the number of rows and columns of matrices

    mat_A - mat_B will be identity
    """

    # matrix representing freqB
    mat_B = np.arange(n ** 2).reshape(n, n) - np.identity(n)

    # matrix representing freqA
    mat_A = np.arange(n ** 2).reshape(n, n)

    # create mock Sv DataArray
    mock_Sv_da = xr.DataArray(data=np.stack([mat_A, mat_B]),
                              coords={"channel": ['chan1', 'chan2'], "ping_time": np.arange(n),
                                      "range_sample": np.arange(n)})

    # create mock frequency_nominal
    mock_freq_nom = xr.DataArray(data=np.array([1.0, 2.0]), coords={"channel": ['chan1', 'chan2']})

    # create mock Dataset with Sv and frequency_nominal
    mock_Sv_ds = xr.Dataset(data_vars={"Sv": mock_Sv_da, "frequency_nominal": mock_freq_nom})

    return mock_Sv_da, mock_Sv_ds


def test_frequency_difference_mask(n=5):
    """
    Tests specifically the mask generated by ``frequency_nominal``

    """

    mock_Sv_da, mock_Sv_ds = get_mock_freq_diff_data(n)

    out = ep.mask.frequency_difference(source_Sv=mock_Sv_ds, storage_options={}, freqAB=None,
                                       chanAB=['chan1', 'chan2'],
                                       operator="==", diff=1.0)

    assert np.all(out == np.identity(n))





